<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
		">
	<!-- http://www.springframework.org/schema/beans/spring-beans.xsd -->
	<!-- http://www.springframework.org/schema/context/spring-context.xsd -->

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
	<!-- <beans:bean id="jsonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" 
		/> <beans:bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> 
		<beans:property name="messageConverters"> <beans:list> <beans:ref bean="jsonHttpMessageConverter" 
		/> </beans:list> </beans:property> </beans:bean> -->

	<beans:bean id="jacksonMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />



	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/js/**" location="/bootstrap/js/" />
	<resources mapping="/fonts/**" location="/bootstrap/fonts/" />
	<resources mapping="/css/**" location="/bootstrap/css/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->

	<!-- 서블릿 생성시 기본 -->
	<!-- 웹 어플리케이션의 WAR 파일 내에 포함된 뷰 템플릿을 찾는다. 뷰 템플릿의 경로는 논리적 뷰 이름에 접두어와 접미어를 
		붙여 구성 -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="order" value="0" />
		<beans:property name="prefix" value="/WEB-INF/jsp/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- ViewResolver의 구현체로 특별한 맵핑 정보 없이 view 이름을 URL로 사용 View 이름과 실제 view 자원과의 
		이름이 같을 때 사용할 수 있다. 참고적으로 JSTL을 사용하려면 위의 viewClass를 정의해주면 된다. -->
	<beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver"
		p:order="1" p:viewClass="org.springframework.web.servlet.view.JstlView"
		p:prefix="/WEB-INF/jsp/" p:suffix=".jsp">
	</beans:bean>


	<!-- 제이슨 -->

	<!-- <beans:bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" 
		/> <beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver" 
		p:order="0" /> <beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" 
		/> -->
	<!-- 서블릿 뷰 종류 http://isstory83.tistory.com/117 -->

	<!-- common 안에 있는 모든 자바파일의 어노테이션을 검색해서 빈으로 등록 -->
	<!-- @Required(RequiedAnnotationBeanPostProcessor) @Autowired(AutowiredAnnotationBeanPostProcessor) 
		@Resource @PostConstruct @PreDestory(CommonAnnotationBeanPostProcessor) @Configuration(ConfigurationClassPostProcessor) 
		@Repository @Service @Controller -->
	<context:component-scan base-package="defult" />



</beans:beans>
